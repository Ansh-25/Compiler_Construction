Non-Terminal program
Non-Terminal moduleDeclarations
Non-Terminal otherModules
Non-Terminal module
Terminal TK_DEF with token value <<
Terminal TK_MODULE with token value module
Terminal TK_ID with token value empty
Terminal TK_ENDDEF with token value >>
Terminal TK_TAKES with token value takes
Terminal TK_INPUT with token value input
Terminal TK_SQBO with token value [
Non-Terminal input_plist
Terminal TK_ID with token value a
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_BOOLEAN with token value boolean
Non-Terminal _input_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value b
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_ARRAY with token value array
Terminal TK_SQBO with token value [
Non-Terminal range_arrays
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_NUM with token value 12
Terminal TK_RANGEOP with token value ..
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_ID with token value a
Terminal TK_SQBC with token value ]
Terminal TK_OF with token value of
Non-Terminal _type
Terminal TK_INTEGER with token value integer
Non-Terminal _input_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal ret
Terminal TK_RETURNS with token value returns
Terminal TK_SQBO with token value [
Non-Terminal output_plist
Terminal TK_ID with token value c
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_REAL with token value real
Non-Terminal _output_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value d
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_INTEGER with token value integer
Non-Terminal _output_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value e
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_BOOLEAN with token value boolean
Non-Terminal _output_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
Non-Terminal driverModule
Terminal TK_DRIVERDEF with token value <<<
Terminal TK_DRIVER with token value driver
Terminal TK_PROGRAM with token value program
Terminal TK_DRIVERENDDEF with token value >>>
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
