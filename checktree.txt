Non-Terminal program
Non-Terminal moduleDeclarations
Non-Terminal moduleDeclaration
Terminal TK_DECLARE with token value declare
Terminal TK_MODULE with token value module
Terminal TK_ID with token value readArr
Terminal TK_SEMICOLON with token value ;
Non-Terminal moduleDeclarations
Non-Terminal otherModules
Non-Terminal module
Terminal TK_DEF with token value <<
Terminal TK_MODULE with token value module
Terminal TK_ID with token value arraySum
Terminal TK_ENDDEF with token value >>
Terminal TK_TAKES with token value takes
Terminal TK_INPUT with token value input
Terminal TK_SQBO with token value [
Non-Terminal input_plist
Terminal TK_ID with token value list
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_ARRAY with token value array
Terminal TK_SQBO with token value [
Non-Terminal range_arrays
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_NUM with token value 1
Terminal TK_RANGEOP with token value ..
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_NUM with token value 15
Terminal TK_SQBC with token value ]
Terminal TK_OF with token value of
Non-Terminal _type
Terminal TK_REAL with token value real
Non-Terminal _input_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value n
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Non-Terminal _input_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal ret
Terminal TK_RETURNS with token value returns
Terminal TK_SQBO with token value [
Non-Terminal output_plist
Terminal TK_ID with token value sum
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_REAL with token value real
Non-Terminal _output_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value index
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value t
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_BOOLEAN with token value boolean
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value sum
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_RNUM with token value 0.000000
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal iterativeStmt
Terminal TK_FOR with token value for
Terminal TK_BO with token value (
Terminal TK_ID with token value index
Terminal TK_IN with token value in
Non-Terminal range_for_loop
Non-Terminal index_for_loop
Non-Terminal sign
Terminal TK_MINUS with token value -
Non-Terminal new_index_for_loop
Terminal TK_NUM with token value 10
Terminal TK_RANGEOP with token value ..
Non-Terminal index_for_loop
Non-Terminal sign
Terminal TK_PLUS with token value +
Non-Terminal new_index_for_loop
Terminal TK_NUM with token value 15
Terminal TK_BC with token value )
Terminal TK_START with token value start
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value a
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value t
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value index
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal relationalOp
Terminal TK_LE with token value <=
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value n
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal conditionalStmt
Terminal TK_SWITCH with token value switch
Terminal TK_BO with token value (
Terminal TK_ID with token value t
Terminal TK_BC with token value )
Terminal TK_START with token value start
Non-Terminal caseStmts
Terminal TK_CASE with token value case
Non-Terminal value
Terminal TK_TRUE with token value true
Terminal TK_COLON with token value :
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value b
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_PRINT with token value print
Terminal TK_BO with token value (
Non-Terminal var_print
Terminal TK_ID with token value list
Non-Terminal P1
Terminal TK_SQBO with token value [
Non-Terminal index_arr
Non-Terminal sign
Terminal TK_PLUS with token value +
Non-Terminal new_index
Terminal TK_ID with token value index
Terminal TK_SQBC with token value ]
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value sum
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value sum
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal op1
Terminal TK_PLUS with token value +
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value list
Non-Terminal N_11
Terminal TK_SQBO with token value [
Non-Terminal element_index_with_expressions
Non-Terminal arrExpr
Non-Terminal arrTerm
Non-Terminal arrFactor
Terminal TK_ID with token value index
Non-Terminal arr_N5
Non-Terminal arr_N4
Terminal TK_SQBC with token value ]
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Terminal TK_BREAK with token value break
Terminal TK_SEMICOLON with token value ;
Non-Terminal N9
Terminal TK_CASE with token value case
Non-Terminal value
Terminal TK_FALSE with token value false
Terminal TK_COLON with token value :
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value c
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_PRINT with token value print
Terminal TK_BO with token value (
Non-Terminal var_print
Terminal TK_ID with token value sum
Non-Terminal P1
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_PRINT with token value print
Terminal TK_BO with token value (
Non-Terminal var_print
Terminal TK_ID with token value index
Non-Terminal P1
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Terminal TK_BREAK with token value break
Terminal TK_SEMICOLON with token value ;
Non-Terminal N9
Non-Terminal _default
Terminal TK_END with token value end
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_PRINT with token value print
Terminal TK_BO with token value (
Non-Terminal var_print
Terminal TK_ID with token value sum
Non-Terminal P1
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
Non-Terminal driverModule
Terminal TK_DRIVERDEF with token value <<<
Terminal TK_DRIVER with token value driver
Terminal TK_PROGRAM with token value program
Terminal TK_DRIVERENDDEF with token value >>>
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value A
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_ARRAY with token value array
Terminal TK_SQBO with token value [
Non-Terminal range_arrays
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_NUM with token value 1
Terminal TK_RANGEOP with token value ..
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_NUM with token value 15
Terminal TK_SQBC with token value ]
Terminal TK_OF with token value of
Non-Terminal _type
Terminal TK_REAL with token value real
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value k
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value s
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_REAL with token value real
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_GET_VALUE with token value get_value
Terminal TK_BO with token value (
Terminal TK_ID with token value k
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal moduleReuseStmt
Non-Terminal optional
Terminal TK_USE with token value use
Terminal TK_MODULE with token value module
Terminal TK_ID with token value readArr
Terminal TK_WITH with token value with
Terminal TK_PARAMETERS with token value parameters
Non-Terminal actual_para_list
Non-Terminal sign
Non-Terminal K
Terminal TK_ID with token value A
Non-Terminal N_11
Non-Terminal N_12
Terminal TK_COMMA with token value ,
Non-Terminal sign
Non-Terminal K
Terminal TK_ID with token value k
Non-Terminal N_11
Non-Terminal N_12
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal moduleReuseStmt
Non-Terminal optional
Terminal TK_SQBO with token value [
Non-Terminal idList
Terminal TK_ID with token value s
Non-Terminal N3
Terminal TK_SQBC with token value ]
Terminal TK_ASSIGNOP with token value :=
Terminal TK_USE with token value use
Terminal TK_MODULE with token value module
Terminal TK_ID with token value arraySum
Terminal TK_WITH with token value with
Terminal TK_PARAMETERS with token value parameters
Non-Terminal actual_para_list
Non-Terminal sign
Non-Terminal K
Terminal TK_ID with token value A
Non-Terminal N_11
Non-Terminal N_12
Terminal TK_COMMA with token value ,
Non-Terminal sign
Non-Terminal K
Terminal TK_ID with token value k
Non-Terminal N_11
Non-Terminal N_12
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_PRINT with token value print
Terminal TK_BO with token value (
Non-Terminal var_print
Terminal TK_ID with token value s
Non-Terminal P1
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
Non-Terminal module
Terminal TK_DEF with token value <<
Terminal TK_MODULE with token value module
Terminal TK_ID with token value readArr
Terminal TK_ENDDEF with token value >>
Terminal TK_TAKES with token value takes
Terminal TK_INPUT with token value input
Terminal TK_SQBO with token value [
Non-Terminal input_plist
Terminal TK_ID with token value arr1
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_ARRAY with token value array
Terminal TK_SQBO with token value [
Non-Terminal range_arrays
Non-Terminal index_arr
Non-Terminal sign
Terminal TK_MINUS with token value -
Non-Terminal new_index
Terminal TK_NUM with token value 10
Terminal TK_RANGEOP with token value ..
Non-Terminal index_arr
Non-Terminal sign
Non-Terminal new_index
Terminal TK_NUM with token value 25
Terminal TK_SQBC with token value ]
Terminal TK_OF with token value of
Non-Terminal _type
Terminal TK_REAL with token value real
Non-Terminal _input_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value k
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Non-Terminal _input_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal ret
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value tempvar
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_REAL with token value real
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value i
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value i
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_NUM with token value 1
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal iterativeStmt
Terminal TK_WHILE with token value while
Terminal TK_BO with token value (
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value i
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal relationalOp
Terminal TK_LE with token value <=
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value k
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal N7
Terminal TK_BC with token value )
Terminal TK_START with token value start
Non-Terminal statements
Non-Terminal statement
Non-Terminal ioStmt
Terminal TK_GET_VALUE with token value get_value
Terminal TK_BO with token value (
Terminal TK_ID with token value tempvar
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value arr1
Non-Terminal whichStmt
Non-Terminal lvalueARRStmt
Terminal TK_SQBO with token value [
Non-Terminal element_index_with_expressions
Non-Terminal arrExpr
Non-Terminal arrTerm
Non-Terminal arrFactor
Terminal TK_ID with token value i
Non-Terminal arr_N5
Non-Terminal arr_N4
Terminal TK_SQBC with token value ]
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value tempvar
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value B
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_ARRAY with token value array
Terminal TK_SQBO with token value [
Non-Terminal range_arrays
Non-Terminal index_arr
Non-Terminal sign
Terminal TK_MINUS with token value -
Non-Terminal new_index
Terminal TK_ID with token value p
Terminal TK_RANGEOP with token value ..
Non-Terminal index_arr
Non-Terminal sign
Terminal TK_PLUS with token value +
Non-Terminal new_index
Terminal TK_ID with token value q
Terminal TK_SQBC with token value ]
Terminal TK_OF with token value of
Non-Terminal _type
Terminal TK_BOOLEAN with token value boolean
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value tempvar
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal U
Non-Terminal unary_op
Terminal TK_MINUS with token value -
Non-Terminal new_NT
Terminal TK_BO with token value (
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value tempvar
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal op1
Terminal TK_PLUS with token value +
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value B
Non-Terminal N_11
Terminal TK_SQBO with token value [
Non-Terminal element_index_with_expressions
Non-Terminal arrExpr
Non-Terminal arrTerm
Non-Terminal arrFactor
Terminal TK_ID with token value a
Non-Terminal arr_N5
Non-Terminal arr_N4
Non-Terminal op1
Terminal TK_PLUS with token value +
Non-Terminal arrTerm
Non-Terminal arrFactor
Terminal TK_ID with token value b
Non-Terminal arr_N5
Non-Terminal op2
Terminal TK_MUL with token value *
Non-Terminal arrFactor
Terminal TK_ID with token value c
Non-Terminal arr_N5
Non-Terminal arr_N4
Terminal TK_SQBC with token value ]
Non-Terminal N5
Non-Terminal N4
Non-Terminal op1
Terminal TK_PLUS with token value +
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value A
Non-Terminal N_11
Terminal TK_SQBO with token value [
Non-Terminal element_index_with_expressions
Non-Terminal unary_op
Terminal TK_PLUS with token value +
Non-Terminal N_10
Non-Terminal new_index
Terminal TK_NUM with token value 5
Terminal TK_SQBC with token value ]
Non-Terminal N5
Non-Terminal N4
Non-Terminal op1
Terminal TK_MINUS with token value -
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value A
Non-Terminal N_11
Terminal TK_SQBO with token value [
Non-Terminal element_index_with_expressions
Non-Terminal unary_op
Terminal TK_MINUS with token value -
Non-Terminal N_10
Non-Terminal new_index
Terminal TK_NUM with token value 10
Terminal TK_SQBC with token value ]
Non-Terminal N5
Non-Terminal N4
Terminal TK_BC with token value )
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value B
Non-Terminal whichStmt
Non-Terminal lvalueARRStmt
Terminal TK_SQBO with token value [
Non-Terminal element_index_with_expressions
Non-Terminal arrExpr
Non-Terminal arrTerm
Non-Terminal arrFactor
Terminal TK_ID with token value k
Non-Terminal arr_N5
Non-Terminal arr_N4
Terminal TK_SQBC with token value ]
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal U
Non-Terminal unary_op
Terminal TK_MINUS with token value -
Non-Terminal new_NT
Non-Terminal var_id_num
Terminal TK_NUM with token value 10
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value i
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value i
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal op1
Terminal TK_PLUS with token value +
Non-Terminal term
Non-Terminal factor
Terminal TK_NUM with token value 1
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
