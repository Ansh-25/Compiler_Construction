Non-Terminal program
Non-Terminal moduleDeclarations
Non-Terminal otherModules
Non-Terminal module
Terminal TK_DEF with token value <<
Terminal TK_MODULE with token value module
Terminal TK_ID with token value compute
Terminal TK_ENDDEF with token value >>
Terminal TK_TAKES with token value takes
Terminal TK_INPUT with token value input
Terminal TK_SQBO with token value [
Non-Terminal input_plist
Terminal TK_ID with token value a
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Non-Terminal _input_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value b
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Non-Terminal _input_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value s1
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_REAL with token value real
Non-Terminal _input_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value c
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Non-Terminal _input_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal ret
Terminal TK_RETURNS with token value returns
Terminal TK_SQBO with token value [
Non-Terminal output_plist
Terminal TK_ID with token value res_1
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_BOOLEAN with token value boolean
Non-Terminal _output_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value res_2_a
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_INTEGER with token value integer
Non-Terminal _output_plist
Terminal TK_COMMA with token value ,
Terminal TK_ID with token value res_2__b
Terminal TK_COLON with token value :
Non-Terminal _type
Terminal TK_REAL with token value real
Non-Terminal _output_plist
Terminal TK_SQBC with token value ]
Terminal TK_SEMICOLON with token value ;
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Non-Terminal statement
Non-Terminal declareStmt
Terminal TK_DECLARE with token value declare
Non-Terminal idList
Terminal TK_ID with token value s
Non-Terminal N3
Terminal TK_COLON with token value :
Non-Terminal dataType
Terminal TK_INTEGER with token value integer
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Non-Terminal statement
Non-Terminal simpleStmt
Non-Terminal assignmentStmt
Terminal TK_ID with token value s
Non-Terminal whichStmt
Non-Terminal lvalueIDStmt
Terminal TK_ASSIGNOP with token value :=
Non-Terminal expression
Non-Terminal arithmeticOrBooleanExpr
Non-Terminal AnyTerm
Non-Terminal arithmeticExpr
Non-Terminal term
Non-Terminal factor
Terminal TK_ID with token value s
Non-Terminal N_11
Non-Terminal N5
Non-Terminal N4
Non-Terminal op1
Terminal TK_PLUS with token value +
Non-Terminal term
Non-Terminal factor
Terminal TK_NUM with token value 1
Non-Terminal N5
Non-Terminal N4
Non-Terminal N8
Non-Terminal N7
Terminal TK_SEMICOLON with token value ;
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
Non-Terminal driverModule
Terminal TK_DRIVERDEF with token value <<<
Terminal TK_DRIVER with token value driver
Terminal TK_PROGRAM with token value program
Terminal TK_DRIVERENDDEF with token value >>>
Non-Terminal moduleDef
Terminal TK_START with token value start
Non-Terminal statements
Terminal TK_END with token value end
Non-Terminal otherModules
